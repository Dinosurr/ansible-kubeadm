---
# tasks file for kubeadm-k8s
- name: Run prereqs check
  include_tasks: prereqs.yml

- name: Check if kubeadm has already run
  stat:
    path: "/k8s_installed_versions"
  register: AlreadyInitialized

- name: Init cluster if needed
  include_tasks: init.yml
  when: inventory_hostname == k8s_primary_controlplane

- name: Register discovery token from master
  command: /usr/local/bin/GetDiscoveryToken.sh
  changed_when: false
  register: "k8s_discovery_token"
  when: inventory_hostname == k8s_primary_controlplane

- name: Register join token from master
  shell: "/usr/local/bin/GetToken.sh"
  changed_when: false
  register: "k8s_token"
  when: inventory_hostname == k8s_primary_controlplane

- name: Import Token to others
  set_fact: k8s_token="{{ hostvars[k8s_primary_controlplane]['k8s_token'] }}"
  when: "inventory_hostname in k8s_worker_group"

- name: Import discovery Token to others
  set_fact: k8s_discovery_token="{{ hostvars[k8s_primary_controlplane]['k8s_discovery_token'] }}"
  when: "inventory_hostname in k8s_worker_group"

- name: Set fact for primary master join ip.
  set_fact: k8s_apiserver_advertise_address="{{ hostvars[k8s_primary_controlplane]['k8s_apiserver_advertise_address'] }}"
  when: "inventory_hostname in k8s_worker_group"

- name: join workers to cluster if needed
  include_tasks: join.yml
  when: "not AlreadyInitialized.stat.exists and inventory_hostname in k8s_worker_group"
